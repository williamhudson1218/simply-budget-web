{"ast":null,"code":"import _defineProperty from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _objectSpread from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/williamhudson/Documents/GitHub/simply-budget-web/src/components/budget/AddBudget.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\"; // MUI Stuff\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\"; // Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { postBudget, clearErrors } from \"../../redux/actions/dataActions\";\nimport moment from \"moment\";\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme, {\n    submitButton: {\n      position: \"relative\",\n      float: \"right\",\n      marginTop: 10\n    },\n    progressSpinner: {\n      position: \"absolute\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      left: \"91%\",\n      top: \"6%\"\n    }\n  });\n};\n\nvar AddBudget = /*#__PURE__*/function (_Component) {\n  _inherits(AddBudget, _Component);\n\n  var _super = _createSuper(AddBudget);\n\n  function AddBudget() {\n    var _this;\n\n    _classCallCheck(this, AddBudget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      open: false,\n      description: \"\",\n      createdAt: moment().format(\"yyyy-MM-DD\"),\n      errors: {}\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.props.clearErrors();\n\n      _this.setState({\n        open: false,\n        errors: {}\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      console.log(_this.state.createdAt);\n      event.preventDefault();\n\n      _this.props.postBudget({\n        description: _this.state.description,\n        createdAt: _this.state.createdAt\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddBudget, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.UI.errors) {\n        this.setState({\n          errors: nextProps.UI.errors\n        });\n      }\n\n      if (!nextProps.UI.errors && !nextProps.UI.loading) {\n        this.setState({\n          description: \"\",\n          createdAt: moment().format(\"yyyy-MM-DD\"),\n          open: false,\n          errors: {}\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          loading = _this$props.UI.loading;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MyButton, {\n        onClick: this.handleOpen,\n        tip: \"Add Budget\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MyButton, {\n        tip: \"Close\",\n        onClick: this.handleClose,\n        tipClassName: classes.closeButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(DialogTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, \"Add new budget\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"description\",\n        type: \"text\",\n        label: \"Budget\",\n        rows: \"1\",\n        placeholder: \"Enter budget description\",\n        error: errors.description ? true : false,\n        helperText: errors.description,\n        className: classes.textField,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submitButton,\n        disabled: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, \"Submit\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 30,\n        className: classes.progressSpinner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }))))));\n    }\n  }]);\n\n  return AddBudget;\n}(Component);\n\nAddBudget.propTypes = {\n  postBudget: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    UI: state.UI\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postBudget: postBudget,\n  clearErrors: clearErrors\n})(withStyles(styles)(AddBudget));","map":{"version":3,"sources":["/Users/williamhudson/Documents/GitHub/simply-budget-web/src/components/budget/AddBudget.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","connect","postBudget","clearErrors","moment","styles","theme","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","AddBudget","state","open","description","createdAt","format","errors","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","console","log","preventDefault","nextProps","UI","loading","classes","textField","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\n// MUI Stuff\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n// Redux stuff\nimport { connect } from \"react-redux\";\nimport { postBudget, clearErrors } from \"../../redux/actions/dataActions\";\nimport moment from \"moment\";\n\nconst styles = (theme) => ({\n  ...theme,\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10,\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\",\n  },\n});\n\nclass AddBudget extends Component {\n  state = {\n    open: false,\n    description: \"\",\n    createdAt: moment().format(\"yyyy-MM-DD\"),\n    errors: {},\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors,\n      });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        description: \"\",\n        createdAt: moment().format(\"yyyy-MM-DD\"),\n        open: false,\n        errors: {},\n      });\n    }\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.props.clearErrors();\n    this.setState({ open: false, errors: {} });\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = (event) => {\n    console.log(this.state.createdAt)\n    event.preventDefault();\n    this.props.postBudget({\n      description: this.state.description,\n      createdAt: this.state.createdAt\n    });\n  };\n  render() {\n    const { errors } = this.state;\n    const {\n      classes,\n      UI: { loading },\n    } = this.props;\n    return (\n      <Fragment>\n        <MyButton onClick={this.handleOpen} tip=\"Add Budget\">\n          <AddIcon />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </MyButton>\n          <DialogTitle>Add new budget</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                name=\"description\"\n                type=\"text\"\n                label=\"Budget\"\n                rows=\"1\"\n                placeholder=\"Enter budget description\"\n                error={errors.description ? true : false}\n                helperText={errors.description}\n                className={classes.textField}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submitButton}\n                disabled={loading}\n              >\n                Submit\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className={classes.progressSpinner}\n                  />\n                )}\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nAddBudget.propTypes = {\n  postBudget: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { postBudget, clearErrors })(\n  withStyles(styles)(AddBudget)\n);\n"]},"metadata":{},"sourceType":"module"}