{"ast":null,"code":"import _defineProperty from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _objectSpread from \"/Users/williamhudson/Documents/GitHub/simply-budget-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/williamhudson/Documents/GitHub/simply-budget-web/src/components/budget/AddExpense.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton'; // MUI Stuff\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { postExpense, clearErrors } from '../../redux/actions/dataActions';\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme, {\n    submitButton: {\n      position: 'relative',\n      float: 'right',\n      marginTop: 10\n    },\n    progressSpinner: {\n      position: 'absolute'\n    },\n    closeButton: {\n      position: 'absolute',\n      left: '91%',\n      top: '6%'\n    }\n  });\n};\n\nvar AddExpense = /*#__PURE__*/function (_Component) {\n  _inherits(AddExpense, _Component);\n\n  var _super = _createSuper(AddExpense);\n\n  function AddExpense() {\n    var _this;\n\n    _classCallCheck(this, AddExpense);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      open: false,\n      description: '',\n      amount: 0,\n      errors: {}\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.props.clearErrors();\n\n      _this.setState({\n        open: false,\n        errors: {}\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.addExpense({\n        description: _this.state.description,\n        amount: _this.state.amount\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddExpense, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.UI.errors) {\n        this.setState({\n          errors: nextProps.UI.errors\n        });\n      }\n\n      if (!nextProps.UI.errors && !nextProps.UI.loading) {\n        this.setState({\n          description: '',\n          amount: 0.00,\n          open: false,\n          errors: {}\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          loading = _this$props.UI.loading;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MyButton, {\n        onClick: this.handleOpen,\n        tip: \"Add Expense\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MyButton, {\n        tip: \"Close\",\n        onClick: this.handleClose,\n        tipClassName: classes.closeButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(DialogTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, \"Add new expense\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"description\",\n        type: \"text\",\n        label: \"Expense\",\n        multiline: true,\n        rows: \"3\",\n        placeholder: \"Enter expense description\",\n        error: errors.description ? true : false,\n        helperText: errors.description,\n        className: classes.textField,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        name: \"amount\",\n        type: \"number\",\n        label: \"Amount\",\n        multiline: true,\n        rows: \"3\",\n        placeholder: \"Enter expense amount\",\n        error: errors.amount ? true : false,\n        helperText: errors.amount,\n        className: classes.textField,\n        onChange: this.handleChange,\n        fullWidth: true,\n        step: \"0.01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submitButton,\n        disabled: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, \"Submit\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 30,\n        className: classes.progressSpinner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }))))));\n    }\n  }]);\n\n  return AddExpense;\n}(Component);\n\nAddExpense.propTypes = {\n  postExpense: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    UI: state.UI\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postExpense: postExpense,\n  clearErrors: clearErrors\n})(withStyles(styles)(AddExpense));","map":{"version":3,"sources":["/Users/williamhudson/Documents/GitHub/simply-budget-web/src/components/budget/AddExpense.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","connect","postExpense","clearErrors","styles","theme","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","AddExpense","state","open","description","amount","errors","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","addExpense","nextProps","UI","loading","classes","textField","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { postExpense, clearErrors } from '../../redux/actions/dataActions';\n\nconst styles = (theme) => ({\n  ...theme,\n  submitButton: {\n    position: 'relative',\n    float: 'right',\n    marginTop: 10\n  },\n  progressSpinner: {\n    position: 'absolute'\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '91%',\n    top: '6%'\n  }\n});\n\nclass AddExpense extends Component {\n  state = {\n    open: false,\n    description: '',\n    amount: 0,\n    errors: {}\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ description: '', amount: 0.00, open: false, errors: {} });\n    }\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.props.clearErrors();\n    this.setState({ open: false, errors: {} });\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addExpense({ description: this.state.description, amount: this.state.amount });\n  };\n  render() {\n    const { errors } = this.state;\n    const {\n      classes,\n      UI: { loading }\n    } = this.props;\n    return (\n      <Fragment>\n        <MyButton onClick={this.handleOpen} tip=\"Add Expense\">\n          <AddIcon />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </MyButton>\n          <DialogTitle>Add new expense</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                name=\"description\"\n                type=\"text\"\n                label=\"Expense\"\n                multiline\n                rows=\"3\"\n                placeholder=\"Enter expense description\"\n                error={errors.description ? true : false}\n                helperText={errors.description}\n                className={classes.textField}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                name=\"amount\"\n                type=\"number\"\n                label=\"Amount\"\n                multiline\n                rows=\"3\"\n                placeholder=\"Enter expense amount\"\n                error={errors.amount ? true : false}\n                helperText={errors.amount}\n                className={classes.textField}\n                onChange={this.handleChange}\n                fullWidth\n                step='0.01'\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submitButton}\n                disabled={loading}\n              >\n                Submit\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className={classes.progressSpinner}\n                  />\n                )}\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nAddExpense.propTypes = {\n  postExpense: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI\n});\n\nexport default connect(\n  mapStateToProps,\n  { postExpense, clearErrors }\n)(withStyles(styles)(AddExpense));\n"]},"metadata":{},"sourceType":"module"}