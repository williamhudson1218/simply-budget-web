{"ast":null,"code":"import { SET_BUDGETS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_BUDGET, SET_ERRORS, POST_SCREAM, CLEAR_ERRORS, LOADING_UI, SET_SCREAM, STOP_LOADING_UI, SUBMIT_COMMENT } from '../types';\nimport axios from 'axios'; // Get all screams\n\nexport var getBudgets = function getBudgets() {\n  return function (dispatch) {\n    console.log(\"You are here\");\n    dispatch({\n      type: LOADING_DATA\n    });\n    axios.get('/budgets').then(function (res) {\n      dispatch({\n        type: SET_BUDGETS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: SET_BUDGETS,\n        payload: []\n      });\n    });\n  };\n};\nexport var getScream = function getScream(screamId) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.get(\"/scream/\".concat(screamId)).then(function (res) {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data\n      });\n      dispatch({\n        type: STOP_LOADING_UI\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // Post a scream\n\nexport var postScream = function postScream(newScream) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.post('/scream', newScream).then(function (res) {\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Like a scream\n\nexport var likeScream = function likeScream(screamId) {\n  return function (dispatch) {\n    axios.get(\"/scream/\".concat(screamId, \"/like\")).then(function (res) {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // Unlike a scream\n\nexport var unlikeScream = function unlikeScream(screamId) {\n  return function (dispatch) {\n    axios.get(\"/scream/\".concat(screamId, \"/unlike\")).then(function (res) {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // Submit a comment\n\nexport var submitComment = function submitComment(screamId, commentData) {\n  return function (dispatch) {\n    axios.post(\"/scream/\".concat(screamId, \"/comment\"), commentData).then(function (res) {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var deleteBudget = function deleteBudget(budgetId) {\n  return function (dispatch) {\n    axios.delete(\"/budget/\".concat(budgetId)).then(function () {\n      dispatch({\n        type: DELETE_BUDGET,\n        payload: budgetId\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var getUserData = function getUserData(userHandle) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_DATA\n    });\n    axios.get(\"/user/\".concat(userHandle)).then(function (res) {\n      dispatch({\n        type: SET_BUDGETS,\n        payload: res.data.screams\n      });\n    }).catch(function () {\n      dispatch({\n        type: SET_BUDGETS,\n        payload: null\n      });\n    });\n  };\n};\nexport var clearErrors = function clearErrors() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n};","map":{"version":3,"sources":["/Users/williamhudson/Documents/GitHub/simply-budget-web/src/redux/actions/dataActions.js"],"names":["SET_BUDGETS","LOADING_DATA","LIKE_SCREAM","UNLIKE_SCREAM","DELETE_BUDGET","SET_ERRORS","POST_SCREAM","CLEAR_ERRORS","LOADING_UI","SET_SCREAM","STOP_LOADING_UI","SUBMIT_COMMENT","axios","getBudgets","dispatch","console","log","type","get","then","res","payload","data","catch","err","getScream","screamId","postScream","newScream","post","clearErrors","response","likeScream","unlikeScream","submitComment","commentData","deleteBudget","budgetId","delete","getUserData","userHandle","screams"],"mappings":"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","sourcesContent":["import {\n  SET_BUDGETS,\n  LOADING_DATA,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  DELETE_BUDGET,\n  SET_ERRORS,\n  POST_SCREAM,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_SCREAM,\n  STOP_LOADING_UI,\n  SUBMIT_COMMENT\n} from '../types';\nimport axios from 'axios';\n\n// Get all screams\nexport const getBudgets = () => (dispatch) => {\n  console.log(\"You are here\")\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get('/budgets')\n    .then((res) => {\n      dispatch({\n        type: SET_BUDGETS,\n        payload: res.data\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_BUDGETS,\n        payload: []\n      });\n    });\n};\nexport const getScream = (screamId) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .get(`/scream/${screamId}`)\n    .then((res) => {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data\n      });\n      dispatch({ type: STOP_LOADING_UI });\n    })\n    .catch((err) => console.log(err));\n};\n// Post a scream\nexport const postScream = (newScream) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post('/scream', newScream)\n    .then((res) => {\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n// Like a scream\nexport const likeScream = (screamId) => (dispatch) => {\n  axios\n    .get(`/scream/${screamId}/like`)\n    .then((res) => {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data\n      });\n    })\n    .catch((err) => console.log(err));\n};\n// Unlike a scream\nexport const unlikeScream = (screamId) => (dispatch) => {\n  axios\n    .get(`/scream/${screamId}/unlike`)\n    .then((res) => {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data\n      });\n    })\n    .catch((err) => console.log(err));\n};\n// Submit a comment\nexport const submitComment = (screamId, commentData) => (dispatch) => {\n  axios\n    .post(`/scream/${screamId}/comment`, commentData)\n    .then((res) => {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\nexport const deleteBudget = (budgetId) => (dispatch) => {\n  axios\n    .delete(`/budget/${budgetId}`)\n    .then(() => {\n      dispatch({ type: DELETE_BUDGET, payload: budgetId });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getUserData = (userHandle) => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(`/user/${userHandle}`)\n    .then((res) => {\n      dispatch({\n        type: SET_BUDGETS,\n        payload: res.data.screams\n      });\n    })\n    .catch(() => {\n      dispatch({\n        type: SET_BUDGETS,\n        payload: null\n      });\n    });\n};\n\nexport const clearErrors = () => (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"]},"metadata":{},"sourceType":"module"}